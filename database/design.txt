Non-MVP:
- Cari melalui GPS

MVP:

- CRUD USTADZ
- Login (lengkap dengan stats online dan offline) dan Register Ustadz
- CRUD USER
- Login dan Register user

Nggak perlu bikin yang canggih dulu, yang penting MVP supaya bisa dites

Tabel User:
- id
- Nama
- E-mail
- Password --> Perlu di enkrip dan kita tes dari backend dulu.
- Nomor KTP (candidate)
- Nomor Telpon (candidate)
- Profile Picture
- Domisili (select, ada kabupaten dan kotanya di select)
- Pendidikan Terakhir (select)
- Status
- Is Online
- Kampus
- Keahlian (diisi dengan Topik_ID yang dia bisa, nanti cari struktur data yang pas.)
- Pekerjaan (otomatis diisi "ustadz" jika adalah ustadz)
- Alasan bergabung


Tabel Keahlian: 
- Topik ID
- User ID (yang ustadz aja)

Tabel Order:
- User_id
- Topik_ID
- Ustadz_ID
- Ordered_at
- Harga (diitung per jam, km yang ditempuh dan biaya satuan service ustadznya)

Jarak antara ustadz dengan user dihitung dari lat dan long alamat user - lat dan long alamat ustadz berdasarkan rumus Haversine formula:


Haversine
formula:    a = sin²(Δφ/2) + cos φ1 ⋅ cos φ2 ⋅ sin²(Δλ/2)
c = 2 ⋅ atan2( √a, √(1−a) )
d = R ⋅ c
where   φ is latitude, λ is longitude, R is earth’s radius (mean radius = 6,371km);
note that angles need to be in radians to pass to trig functions!
JavaScript: 
var R = 6371e3; // metres
var φ1 = lat1.toRadians();
var φ2 = lat2.toRadians();
var Δφ = (lat2-lat1).toRadians();
var Δλ = (lon2-lon1).toRadians();

var a = Math.sin(Δφ/2) * Math.sin(Δφ/2) +
        Math.cos(φ1) * Math.cos(φ2) *
        Math.sin(Δλ/2) * Math.sin(Δλ/2);
var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));

var d = R * c;

https://www.movable-type.co.uk/scripts/latlong.html

